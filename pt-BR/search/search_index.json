{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Posts Recentes \u00b6 Como consumir uma API com Python \u00b6 Felipe Guedes \u00b7 @guedesfelipe 21 Abril, 2022 \u00b7 2 min leitura Para consumir uma API de forma simples com Python usaremos a biblioteca chamada requests... Continue Lendo","title":"\ud83c\udfe0 &nbsp;In\u00edcio"},{"location":"#posts-recentes","text":"","title":"Posts Recentes"},{"location":"#como-consumir-uma-api-com-python","text":"Felipe Guedes \u00b7 @guedesfelipe 21 Abril, 2022 \u00b7 2 min leitura Para consumir uma API de forma simples com Python usaremos a biblioteca chamada requests... Continue Lendo","title":"Como consumir uma API com Python"},{"location":"python/consume-api/","text":"\ud83d\udc7d\ufe0f Como consumir uma API com Python \u00b6 Para consumir uma API de forma simples com Python usaremos a biblioteca chamada requests . \ud83d\udd27 Preparando o Ambiente \u00b6 Virtual Env Poetry python3 -m venv .venv # (1) source .venv/bin/activate # (2) pip install requests # (3) Criando a virtualenv ( Mude python3 para o PATH onde esta instalado o seu Python se for necess\u00e1rio) Ativando a virtualenv (MacOS e Linux) Instalando a biblioteca requests poetry add requests # (1) Instalando a biblioteca requests with Poetry \u2328\ufe0f C\u00f3digo \u00b6 Neste exemple vamos consumir a API que retornar\u00e1 um fato divertido aleat\u00f3rio e mostrar em tela. consume_api.py 1 2 3 4 5 6 7 8 9 10 import requests # (1) try : response = requests . get ( 'https://api.aakhilv.me/fun/facts' ) # (2) response . raise_for_status () # (3) fun_fact = response . json ()[ 0 ] # (4) print ( f 'Fun Fact: { fun_fact } ' ) # (5) except HTTPError as error : # (6) print ( f '[ { error . response . status_code } ] { error } ' ) # (7) Importando a biblioteca requests Realizando o get no enpoint /fun/facts na API Checando se a requisi\u00e7\u00e3o retornou algum erro de status_code , caso de erro ir\u00e1 gerar uma exce\u00e7\u00e3o do tipo HTTPError (Linha 9 trata esta exce\u00e7\u00e3o) Converte o response para json e pega o primeiro elemento da lista de retorno Mostra em tela um fato divertido aleat\u00f3rio Se a linha 6 levantar uma exce\u00e7\u00e3o do tipo HTTPError , aqui ela ser\u00e1 tratada Mostra em tela o status_code e o erro ocorrido \ud83d\ude80 Rodando a Aplica\u00e7\u00e3o \u00b6 python consume_api.py \ud83d\uddbc\ufe0f Sa\u00edda \u00b6","title":"\ud83d\udc7d\ufe0f Como consumir uma API com Python"},{"location":"python/consume-api/#como-consumir-uma-api-com-python","text":"Para consumir uma API de forma simples com Python usaremos a biblioteca chamada requests .","title":"\ud83d\udc7d\ufe0f Como consumir uma API com Python"},{"location":"python/consume-api/#preparando-o-ambiente","text":"Virtual Env Poetry python3 -m venv .venv # (1) source .venv/bin/activate # (2) pip install requests # (3) Criando a virtualenv ( Mude python3 para o PATH onde esta instalado o seu Python se for necess\u00e1rio) Ativando a virtualenv (MacOS e Linux) Instalando a biblioteca requests poetry add requests # (1) Instalando a biblioteca requests with Poetry","title":"\ud83d\udd27 Preparando o Ambiente"},{"location":"python/consume-api/#codigo","text":"Neste exemple vamos consumir a API que retornar\u00e1 um fato divertido aleat\u00f3rio e mostrar em tela. consume_api.py 1 2 3 4 5 6 7 8 9 10 import requests # (1) try : response = requests . get ( 'https://api.aakhilv.me/fun/facts' ) # (2) response . raise_for_status () # (3) fun_fact = response . json ()[ 0 ] # (4) print ( f 'Fun Fact: { fun_fact } ' ) # (5) except HTTPError as error : # (6) print ( f '[ { error . response . status_code } ] { error } ' ) # (7) Importando a biblioteca requests Realizando o get no enpoint /fun/facts na API Checando se a requisi\u00e7\u00e3o retornou algum erro de status_code , caso de erro ir\u00e1 gerar uma exce\u00e7\u00e3o do tipo HTTPError (Linha 9 trata esta exce\u00e7\u00e3o) Converte o response para json e pega o primeiro elemento da lista de retorno Mostra em tela um fato divertido aleat\u00f3rio Se a linha 6 levantar uma exce\u00e7\u00e3o do tipo HTTPError , aqui ela ser\u00e1 tratada Mostra em tela o status_code e o erro ocorrido","title":"\u2328\ufe0f C\u00f3digo"},{"location":"python/consume-api/#rodando-a-aplicacao","text":"python consume_api.py","title":"\ud83d\ude80 Rodando a Aplica\u00e7\u00e3o"},{"location":"python/consume-api/#saida","text":"","title":"\ud83d\uddbc\ufe0f Sa\u00edda"}]}